version: "3.8"

services:
  playwright-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: playwright-automation-server
    ports:
      - "8000:8000"
    environment:
      # Admin Access
      - ADMIN_API_KEY=admin-super-secret-key-2024

      # Execution Limits
      - MAX_CONCURRENT_EXECUTIONS=10
      - MAX_QUEUE_SIZE=100
      - MAX_SCRIPT_SIZE=50000
      - MAX_EXECUTION_TIME=300
      - EMERGENCY_TIMEOUT_MULTIPLIER=2

      # Video Settings (720p only)
      - VIDEO_RETENTION_DAYS=7
      - VIDEO_CLEANUP_HOUR=2
      - VIDEO_WIDTH=1280
      - VIDEO_HEIGHT=720

      # Rate Limiting
      - GLOBAL_RATE_LIMIT_PER_MINUTE=60
      - PER_KEY_RATE_LIMIT_PER_MINUTE=30

      # Database
      - DATABASE_PATH=./data/database.db

      # Browser Pool
      - BROWSER_POOL_SIZE=10
      - BROWSER_WARMUP_PAGES=3

      # Dashboard
      - DASHBOARD_REFRESH_INTERVAL=5

      # Webhooks
      - MAX_WEBHOOK_RETRIES=3
      - WEBHOOK_TIMEOUT=10

      # Resource Limits
      - MAX_MEMORY_MB_PER_EXECUTION=512
      - MAX_CPU_PERCENT_PER_EXECUTION=50

      # Security
      - ALLOWED_DOMAINS=*
      - SCRIPT_TIMEOUT_GRACE_PERIOD=30
    volumes:
      - ./data:/app/data
      - /dev/shm:/dev/shm # Shared memory for browser performance
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: "1.0"
        reservations:
          memory: 512M
          cpus: "0.25"
    # Security options
    security_opt:
      - no-new-privileges:true
    # Add capabilities needed for Chrome
    cap_add:
      - SYS_ADMIN
    # Network configuration
    networks:
      - playwright-network

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: playwright-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro # SSL certificates if needed
    depends_on:
      - playwright-server
    restart: unless-stopped
    networks:
      - playwright-network
    profiles:
      - production # Only start with --profile production

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: playwright-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    depends_on:
      - playwright-server
    restart: unless-stopped
    networks:
      - playwright-network
    profiles:
      - monitoring # Only start with --profile monitoring

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: playwright-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - playwright-network
    profiles:
      - monitoring # Only start with --profile monitoring

networks:
  playwright-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
